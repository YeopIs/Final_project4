<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.finalproject.team4.shouldbe.mapper.AdminMapper">

    <!--//대시보드=====================================================-->
    <select id="monthVisitor" resultType="DashboardVO">
        SELECT
            EXTRACT(MONTH FROM u.log_date) AS month,
        usr.nation,
        COUNT(*) AS visitCount
        FROM
            user_login u
            JOIN
            users usr ON u.user_id = usr.user_id
        WHERE
            EXTRACT(YEAR FROM u.log_date) = EXTRACT(YEAR FROM CURRENT_DATE)
        GROUP BY
            EXTRACT(MONTH FROM u.log_date), usr.nation
    </select>

    <select id="countUsersByNation" resultType="DashboardVO">
        SELECT
            nation,
            COUNT(*) visitCount
        FROM
            users
        GROUP BY
            nation
    </select>

    <select id="latestBoard" resultType="BoardVO">
        SELECT post_id, title, user_id, board_cat
        FROM
            posts
        order by post_id desc limit 5
    </select>

    <select id="latestReply" resultType="BoardReplyVO">
        SELECT
            p.post_id,
            p.title,
            c.content,
            c.user_id as writer
        FROM
            posts p
                JOIN comments c ON p.post_id = c.post_id
        ORDER BY
            c.comment_id DESC
            LIMIT 5
    </select>
    <!--
    //게시글관리_보드삭제 버튼======================================================
    //댓글관리======================================================
    //퀴즈관리======================================================
    //퀴즈관리_퀴즈등록페이지버튼======================================================
    //퀴즈관리_유저퀴즈등록버튼======================================================
    //퀴즈관리_등록된 퀴즈 리스트======================================================
    //채팅관리======================================================

    -->


    <!--//현재회원관리===================================================== -->
    <select id="countMember" resultType="int">
        SELECT COUNT(*)
        FROM users
    </select>
    <select id="adminMemberList" resultType="com.finalproject.team4.shouldbe.vo.AdminMemberVO">
        select profile_img, user_name, user_id, time, count_report
        from users
        ORDER BY user_id
            LIMIT #{pvo.offsetPoint}, #{pvo.onePageRecord}
    </select>
    <select id="postsCount" resultType="int">
        select count(*) from posts where user_id=#{user_id}
    </select>


    <!--//정지회원관리====================================================== -->
    <select id="countSuspendedMember" resultType="int">
        SELECT COUNT(*)
        FROM suspended_users
        WHERE DATE_ADD(suspended_time, INTERVAL suspended_period DAY) > CURDATE()
    </select>

    <select id="adminSuspendedList" resultType="AdminMemberVO">
        SELECT su.suspended_id, su.user_id, su.suspended_time, su.suspended_period, su.reason,
               u.user_name, u.count_report
        FROM suspended_users su
                 JOIN users u ON su.user_id = u.user_id
        WHERE DATE_ADD(su.suspended_time, INTERVAL su.suspended_period DAY) > CURDATE()
        ORDER BY DATE_ADD(su.suspended_time, INTERVAL su.suspended_period DAY)
            LIMIT #{pvo.offsetPoint}, #{pvo.onePageRecord}
    </select>

    <!--//정지회원관리_정지버튼====================================================== -->
    <insert id="suspendInsert">
        insert into suspended_users(user_id,suspended_time,suspended_period,reason) values(#{user_id},DATE_ADD(NOW(), INTERVAL ${time} DAY ),${time},#{reason});
</insert>


    <!--//정지회원관리_정지해제버튼====================================================== -->
    <delete id="suspendDelete">
        delete from suspended_users where suspended_id=${suspended_id}
    </delete>

    <!--//탈퇴회원관리======================================================-->
    <select id="countWithdrawnMember" resultType="int">
        SELECT COUNT(*)
        FROM withdrawn_users
    </select>
    <select id="adminWithdrawnList" resultType="AdminMemberVO">
        select user_id, withdrawn_time
        from withdrawn_users
        ORDER BY withdrawn_time asc
            LIMIT #{pvo.offsetPoint}, #{pvo.onePageRecord}
    </select>
    <select id="adminWithdrawnListUsers" resultType="AdminMemberVO">
        select profile_img, user_name,count_report,time
        from users
        where user_id=#{user_id}
    </select>

    <delete id="withdrawExpiredUsers">
    <![CDATA[
        DELETE users
        FROM users
        INNER JOIN withdrawn_users ON users.user_id = withdrawn_users.user_id
        WHERE withdrawn_users.withdrawn_time < NOW() - INTERVAL 30 DAY
        ]]>
    </delete>

    <delete id="deleteUserById" parameterType="String">
        DELETE FROM users WHERE user_id = #{userId}
    </delete>

    <!--//게시글관리====================================================== -->
    <select id="countBoard" resultType="int">
        SELECT COUNT(*)
        FROM post_report;
    </select>
    <select id="getBoardReportList" resultType="com.finalproject.team4.shouldbe.vo.BoardReportVO">
        SELECT post_report_id,user_id,post_id,report_time FROM post_report
        ORDER BY report_time desc
        LIMIT #{pvo.offsetPoint}, #{pvo.onePageRecord}
    </select>
    <select id="getPostsVO" resultType="com.finalproject.team4.shouldbe.vo.BoardReportVO">
        select title,content,board_cat from posts where post_id=${post_id}
    </select>
    <delete id="boardReportDelete">
        delete from post_report where post_report_id=${report_id}
    </delete>


    <!--댓글관리======================================================-->
    <select id="countBoardReply" resultType="int">
        SELECT COUNT(*)
        FROM comment_report
    </select>
    <select id="selectBoardReply" parameterType="map" resultType="AdminCommentReportVO">
        SELECT cr.*, c.post_id
        FROM comment_report cr
                 INNER JOIN comments c ON cr.comment_id = c.comment_id
        ORDER BY cr.report_time desc
            LIMIT #{pvo.offsetPoint}, #{pvo.onePageRecord}
    </select>
    <select id="commentContent" resultType="com.finalproject.team4.shouldbe.vo.AdminCommentReportVO">
        select content
        from comments
        where comment_id=${comment_id}
    </select>
    <delete id="commentDelete">
        delete from comment_report where comment_id=${comment_id}
    </delete>
    <delete id="commentReportDelete">
        delete from comment_report where comment_report_id=${report_id}
    </delete>


    <!--//퀴즈관리======================================================-->
    <select id="quizlist" resultType="com.finalproject.team4.shouldbe.vo.QuizVO">
        select quiz_id, level, quiz_lang, quiz_content
        from quiz
        where level = ${level}
    </select>

    <delete id="postsDelete">
        delete from post_report where post_id=${post_id}
    </delete>

    <select id="quiz_table" resultType="com.finalproject.team4.shouldbe.vo.QuizVO">
        select quiz_id, level, quiz_lang, quiz_content
        from quiz
        where quiz_id = ${quiz_id}
    </select>
    <!--퀴즈관리_퀴즈등록페이지버튼======================================================-->
    <insert id="quizInsert">
        insert into quiz(quiz_content,level,quiz_lang) values(#{quiz_content},${level},'eng');
    </insert>
    <select id="selectQuizId" resultType="int">
        select quiz_id from quiz where quiz_content=#{quiz_content};
    </select>
    <insert id="answerInsert">
        insert into answer(quiz_id,answer,answer_lang) values (${quiz_id},#{answer}, #{answer_lang});
    </insert>


    <!--//퀴즈관리_등록된 퀴즈 리스트======================================================-->
    <select id="editlist" resultType="com.finalproject.team4.shouldbe.vo.QuizVO">
        select q.quiz_id, q.level, q.quiz_lang, q.quiz_content, a.answer
        from quiz q
                 join answer a on q.quiz_id = a.quiz_id
        where a.quiz_id = ${quiz_id}
    </select>

    <!-- //퀴즈관리_등록된 answer 삭제 버튼======================================================-->
    <delete id="answerDelete">
        delete from answer where answer=#{answer}
    </delete>
    <!-- //퀴즈관리_등록된 quiz 삭제 버튼======================================================-->
    <delete id="quizDelete">
        delete from quiz where quiz_id=${quiz_id}
    </delete>

    <!--//채팅관리======================================================-->
    <select id="countMessage" resultType="int">
        SELECT COUNT(*)
        FROM message_report
    </select>
    <select id="adminChatList" resultType="com.finalproject.team4.shouldbe.vo.AdminChatVO">
        select message_report_id, user_id, msg_id, report_time, content
        from message_report
        ORDER BY report_time desc
            LIMIT #{pvo.offsetPoint}, #{pvo.onePageRecord}
    </select>
    <delete id="messageReportDelete">
        delete from message_report where message_report_id=${report_id}
    </delete>
    <select id="selectUserIdForMessageReport" resultType="String">
        SELECT user_id
        FROM message_report
        WHERE message_report_id = #{message_report_id}
    </select>
    <delete id="messageReportDelete2">
        delete from message_report where message_report_id=${message_report_id}
    </delete>
    <update id="decrementCountReport">
        UPDATE users
        SET count_report = count_report - 1
        WHERE user_id = #{user_id}
    </update>

    <select id="selectUserIdForBoardReport" resultType="String">
        SELECT user_id
        FROM post_report
        WHERE post_report_id = #{reportId}
    </select>

    <select id="selectUserIdForCommentReport" resultType="String">
        SELECT user_id
        FROM comment_report
        WHERE comment_report_id = #{reportId}
    </select>










<!--
    <select id="commentsCount" resultType="int">
        select count(*) from comments where user_id=#{user_id}
    </select>

    <select id="adminMemberList" resultType="com.finalproject.team4.shouldbe.vo.AdminMemberVO">
        select u.profile_img,
               u.user_id,
               u.user_name,
               u.time,
               (select count(*) from posts where u.user_id = p.user_id)    posts_count,
               (select count(*) from comments where u.user_id = c.user_id) coments_count,
               u.count_report
        from users u
                 join posts p on u.user_id = p.user_id
                 join comments c on u.user_id = c.user_id
    </select>
-->





    <!--
        <select id="adminSuspendedList" resultType="com.finalproject.team4.shouldbe.vo.AdminSuspendedVO">
           select u.profile_img, u.user_id, u.user_name,
           su.suspended_time, su.reason,
           (select count(*) from posts where u.user_id=p.user_id) posts_count,
           (select count(*) from coments where u.user_id=c.user_id) coments_count,
           u.count_report
           from users u
           join suspended_users su on u.user_id=su.user_id
           join posts p on u.user_id=p.user_id
           join coments c on u.user_id=c.user_id
        </select>
    -->






    <!--
        <select id="adminWithdrawnList" resultType="com.finalproject.team4.shouldbe.vo.AdminWithdrawnVO">
           select u.profile_img, u.user_id, u.user_name,
           wu.withdrawn_time,
           (select count(*) from posts where u.user_id=p.user_id) posts_count,
           (select count(*) from coments where u.user_id=c.user_id) coments_count,
           u.count_report
           from users u
           join withdrawn_users wu on u.user_id=wu.user_id
           join posts p on u.user_id=p.user_id
           join coments c on u.user_id=c.user_id
        </select>
    -->

    <select id="selectMessage" parameterType="map" resultType="com.finalproject.team4.shouldbe.vo.MessageVO">
        SELECT *
        FROM message
        ORDER BY msg_id
            LIMIT #{pvo.offsetPoint}, #{pvo.onePageRecord}
    </select>
    <!-- 진행중
        <select id="adminChatList" resultType="com.finalproject.team4.shouldbe.vo.AdminChatVO">
           select u.profile_img, u.user_id, u.user_name,
           wu.withdrawn_time,
           u.count_report
           from users u
           join chat_report cr on u.user_id=cr.user_id
        </select>
    -->


    <!-- Select a paginated list of board entries
    <select id="selectBoard" parameterType="map" resultType="com.finalproject.team4.shouldbe.vo.BoardVO">
        SELECT * FROM posts
        ORDER BY post_id
        LIMIT #{pvo.offsetPoint}, #{pvo.onePageRecord}
    </select>
         Replace 'some_column' with the actual column you want to sort by -->




    <!-- Select a paginated list of board entries -->






    <!-- Select a paginated list of board entries -->
    <select id="selectMember" parameterType="map" resultType="com.finalproject.team4.shouldbe.vo.UserVO">
        SELECT *
        FROM users
        ORDER BY user_id
            LIMIT #{pvo.offsetPoint}, #{pvo.onePageRecord}
    </select>

</mapper>